---
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies and build
        run: |
          npm install
          npm run build
  build-and-push-image:
    runs-on: ubuntu-latest
    # needs: [build]
    # if: github.ref_name == 'main'
    environment:
      name: testing
      url: https://nekshor.fr
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ghcr.io/sts076/back_end_age2age:${{ github.ref_name }}
   deploy-docker:
    runs-on: ubuntu-latest
    needs: [build-push-docker, test]
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDImBZcMGLy5WN3/l8q6Z3ELOAh7Hek+AJm84UQKWiMk8cu/CYySDLOZc2rTyW0TK+joyuV0RAetFl7+nXujjLneh5bu//PPWkheXDojnk8RkKkNtNNlSY8TFis2YkMasMoQ+ubYpYfnBtjLRmep+RoUkXDe5dEZ7w54vhfoZfQL6AJZcKJCOx6bJ52ejUYGiIPIcFm8KXPYKd7XNxRUVeyUfq5mpEPwdv8DvJgGwOGTeeO/sf3uc0GrrRjjEdHpy+IA52UhRy6JswECWgSwq+hMUtGUjJtFTyGLGT42sc+VjYMKZTBAxnzyNygdvyoV7NFPJa6VCXx7mi38H8GhreilIetiSIoswTtkplRcCbLgi/Djz5mtr22aJcKKLqZF8089j5TAv33i/mCSYWxSYQlq334JDmV0Cv7T3hrpNxIdMJzC5EVS2Rzp3+6f5b8VJjFMcYWExDH9cYwJ4hH0DyYlPkVvkWn4MGxfCXleeHffo7hHbZiTdinb1xPqb9DmHM= root@vps3
       - run: |
           ssh -o StrictHostKeyChecking=no grant@nekshor.fr "\
           sudo docker pull ghcr.io/alexispe/cesi-next-cicd:latest && \
           sudo docker stop next && \
           sudo docker rm next && \
           sudo docker run -d -p 3000:3000 --name next ghcr.io/alexispe/cesi-next-cicd:latest"
      - run: |
          ssh -o StrictHostKeyChecking=no grant@nekshor.fr "\
          sudo docker compose -f docker-compose.prod.yml up -d --pull always"

       
      

'on': [ push ]


  # deploy-production:
  #   runs-on: ubuntu-latest
  #   # needs: [test]
  #   environment:
  #     name: production
  #     url: http://35.181.58.20:3000
  #   # if: github.ref_name == 'main'
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ghcr.io/alexispe/cesi-next-cicd:latest









  # deploy:
  #   # needs: [build]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: development
  #     url: https://nekshor.fr
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Log in to the server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: nekshor.fr
  #         username: grant
  #         password: NekShor27
  #         port: 22
  #         script: |
  #           cd /home/web/cicd/project/back_end_age2age
  #           git pull
  #           npm install
  #           npm run build
  #           npm run 
  #     - name: Check if the server is up
  #       run: |
  #         sleep 10  # Attendre quelques secondes pour que le serveur ait le temps de démarrer
  #         status_code=$(curl --write-out %{http_code} --silent --output /dev/null https://nekshor.fr)
  #         if [[ $status_code -eq 200 ]]; then
  #           echo "Le serveur est en ligne."
  #         else
  #           echo "Échec de la vérification du serveur."
  #           exit 1
  #         fi     